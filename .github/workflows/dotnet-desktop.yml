name: Ion Hash DotNet Release

on:
  release:
    types: [ created ]

jobs:
  test:
    name: Test
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ windows-latest ]
        dotnet: ['2.1']

    steps:
      - name: Git Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ matrix.dotnet }}
      - name: Build
        run: dotnet build --configuration Release
      - name: Unit test
        run: dotnet test --configuration Release --no-build --no-restore --verbosity normal

  release:
    name: Release
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ windows-latest ]
        dotnet: ['2.1']

    steps:
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          role-skip-session-tagging: true
          aws-region: us-west-2
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-external-id: ${{ secrets.AWS_ROLE_EXTERNAL_ID }}
          role-duration-seconds: 900

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ matrix.dotnet }}

      - name: Git Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Sign
        shell: bash
        run: |
          dotnet build --configuration Release
          
      - name: release
        run: |
          dotnet pack --configuration Release --no-build
          dotnet nuget push Amazon.IonHashDotnet/bin/Release/Amazon.IonHashDotnet.*.nupkg --api-key 123123 --source https://api.nuget.org/v3/index.json
